name: ci

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install pnpm
        uses: pnpm/action-setup@v2
      - name: install deps
        run: pnpm install
      - name: setup just
        uses: extractions/setup-just@v1
      - name: lint
        run: just lint
      - name: format
        run: just format-check
      - name: typecheck
        run: just typecheck
      - name: test
        run: just test

  storybook:
    name: storybook
    runs-on: ubuntu-latest
    env:
      ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: install pnpm
        uses: pnpm/action-setup@v2
      - name: install deps
        run: pnpm install
      - name: setup just
        uses: extractions/setup-just@v1
      - name: build storybook
        run: STORYBOOK_SCREENSHOT_TESTING=true just build-storybook
      - name: serve storybook
        run: |
          mv -f storybook/storybook-static/{iframe,index}.html
          pnpm dlx serve -l 4777 storybook/storybook-static &
      - name: take screenshots
        run: just visual-test
      - name: upload screenshots
        run:
          pnpm dlx @argos-ci/cli upload storybook/visual-tests/screenshots/argos || true
      - name: create screenshots pr
        id: pr
        uses: peter-evans/create-pull-request@v4
        with:
          base: ${{ github.head_ref }}
          commit-message: '[automated] update screenshots from CI'
          branch: screenshots/patch/${{ github.head_ref }}
          delete-branch: true
          title: update screenshots from CI
      - name: pr comment
        if: ${{ steps.pr.outputs.pull-request-number }}
        uses: mshick/add-pr-comment@v2
        with:
          message: 'PR for changed screenshots: ${{ steps.pr.outputs.pull-request-url }}'

  dashboard:
    name: dashboard
    runs-on: ubuntu-latest
    env:
      VITE_API_ENDPOINT: ${{ secrets.STAGING_API_ENDPOINT }}
      VITE_TEST_ADMIN_CREDS: ${{ secrets.TEST_ADMIN_CREDS }}
    steps:
      - name: reset staging # cypress tests depend slightly on staging api state
        run: curl --silent ${{ secrets.STAGING_API_RESET_ROUTE  }}; true
      - name: checkout
        uses: actions/checkout@v3
      - name: install pnpm
        uses: pnpm/action-setup@v2
      - name: install deps
        run: pnpm install
      - name: setup just
        uses: extractions/setup-just@v1
      - name: build dashboard
        run: just build-dash
      - name: cypress
        uses: cypress-io/github-action@v4.2.0
        with:
          start: pnpm --filter @dash/app preview
          project: dash/app
      - name: upload-videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: dash/app/cypress/videos

  site:
    name: site
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install pnpm
        uses: pnpm/action-setup@v2
      - name: install deps
        run: pnpm install
      - name: setup just
        uses: extractions/setup-just@v1
      - name: build site
        run: just build-site
